// <auto-generated />
using System;
using ComputerAccessories.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerAccessories.Migrations
{
    [DbContext(typeof(ComputerAccessoriesContext))]
    [Migration("20191107014211_AddModel")]
    partial class AddModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerAccessories.Models.TblAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_Attribute");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbl_Brand");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ParentCateId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbl_Category");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblDistrict", b =>
                {
                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DistrictType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("tbl_District");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("PromotionPrice")
                        .HasColumnType("money");

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Thumnail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_Product");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblProductAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_Product_Attributes");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblProductImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_Product_Images");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblProvince", b =>
                {
                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProvinceType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProvinceId");

                    b.ToTable("tbl_Province");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("tbl_Roles");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblUserAddress", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceDetail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserId", "ProvinceId", "DistrictId", "WardId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("WardId");

                    b.ToTable("tbl_User_Address");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_User_Role");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CodeConfirm")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("tbl_Users");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblWard", b =>
                {
                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("WardName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("WardType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("WardId");

                    b.HasIndex("DistrictId");

                    b.ToTable("tbl_Ward");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblAttribute", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblCategory", "Category")
                        .WithMany("TblAttribute")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_tbl_Attribute_tbl_Category");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblDistrict", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblProvince", "Province")
                        .WithMany("TblDistrict")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_tbl_District_tbl_Province")
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblProduct", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblBrand", "Brand")
                        .WithMany("TblProduct")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_tbl_Product_tbl_Brand")
                        .IsRequired();

                    b.HasOne("ComputerAccessories.Models.TblCategory", "Category")
                        .WithMany("TblProduct")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_tbl_Product_tbl_Category")
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblProductAttributes", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblAttribute", "Attribute")
                        .WithMany("TblProductAttributes")
                        .HasForeignKey("AttributeId")
                        .HasConstraintName("FK_tbl_Product_Attributes_tbl_Attribute");

                    b.HasOne("ComputerAccessories.Models.TblProduct", "Product")
                        .WithMany("TblProductAttributes")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_tbl_Product_Attributes_tbl_Product");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblProductImages", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblProduct", "Product")
                        .WithMany("TblProductImages")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_tbl_Product_Images_tbl_Product");
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblUserAddress", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblDistrict", "District")
                        .WithMany("TblUserAddress")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK_tbl_User_Address_tbl_District")
                        .IsRequired();

                    b.HasOne("ComputerAccessories.Models.TblProvince", "Province")
                        .WithMany("TblUserAddress")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_tbl_User_Address_tbl_Province")
                        .IsRequired();

                    b.HasOne("ComputerAccessories.Models.TblUsers", "User")
                        .WithMany("TblUserAddress")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_tbl_User_Address_tbl_Users")
                        .IsRequired();

                    b.HasOne("ComputerAccessories.Models.TblWard", "Ward")
                        .WithMany("TblUserAddress")
                        .HasForeignKey("WardId")
                        .HasConstraintName("FK_tbl_User_Address_tbl_Ward")
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblUserRole", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblRoles", "Role")
                        .WithMany("TblUserRole")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_AspNetUserRoles_AspNetRoles_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputerAccessories.Models.TblUsers", "User")
                        .WithMany("TblUserRole")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_AspNetUserRoles_AspNetUsers_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerAccessories.Models.TblWard", b =>
                {
                    b.HasOne("ComputerAccessories.Models.TblDistrict", "District")
                        .WithMany("TblWard")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK_tbl_Ward_tbl_District")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
